var searchIndex = JSON.parse('{\
"surf_disco":{"doc":"Surf Disco: a client library for Tide Disco applications.","t":[13,13,13,13,13,13,13,13,2,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,13,13,13,13,13,13,13,2,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,8,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,10,11,12,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Accepted","Acl","BadGateway","BadRequest","BaselineControl","Bind","Checkin","Checkout","Client","Conflict","Connect","Continue","Copy","Created","Delete","EarlyHints","Error","ExpectationFailed","FailedDependency","Forbidden","Found","GatewayTimeout","Get","Gone","Head","HttpVersionNotSupported","ImATeapot","ImUsed","InsufficientStorage","InternalServerError","Label","LengthRequired","Link","Lock","Locked","LoopDetected","Merge","Method","MethodNotAllowed","MisdirectedRequest","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","PartialContent","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","Post","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticationRequired","Put","Rebind","Report","Request","RequestHeaderFieldsTooLarge","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","Search","SeeOther","ServiceUnavailable","SocketRequest","StatusCode","SwitchingProtocols","TemporaryRedirect","TooEarly","TooManyRequests","Trace","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","Unlink","Unlock","UnprocessableEntity","UnsupportedMediaType","Update","UpdateRedirectRef","UpgradeRequired","UriTooLong","Url","VariantAlsoNegotiates","VersionControl","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cannot_be_a_base","canonical_reason","catch_all","client","clone","clone","clone","clone_into","clone_into","clone_into","cmp","connect","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_internal","domain","drop","drop","drop","eq","eq","eq","eq","error","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from_config_error","from_directory_path","from_file_path","from_io_error","from_request_error","from_route_error","from_server_error","from_socket_error","from_str","from_str","get","get_hash","get_hash","get_hash","has_authority","has_host","hash","hash","hash","host","host_str","http","index","index","index","index","init","init","init","into","into","into","into_client_request","into_client_request","into_client_request","into_client_request","into_resettable","into_string","into_tide_error","is_client_error","is_informational","is_redirection","is_safe","is_server_error","is_success","join","make_relative","options","origin","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","port","port_or_known_default","post","query","query_pairs","query_pairs_mut","render_to","render_to","render_to","request","scheme","serialize","serialize","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket","socket_addrs","status","to_file_path","to_listener","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","username","vzip","vzip","vzip","Available","Client","ClientBuilder","HealthCheck","HealthStatus","Initializing","ShuttingDown","TemporarilyUnavailable","Unavailabale","Unhealthy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","connect","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","from","from","from","from","get","healthcheck","init","init","init","into","into","into","module","new","post","request","serialize","set_timeout","socket","status","status","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_health","ClientError","Error","as_error_source","backtrace","borrow","borrow_mut","catch_all","catch_all","cause","clone","clone_into","deref","deref_mut","description","deserialize","drop","eq","fmt","fmt","from","from","from","from","from","from","from_config_error","from_io_error","from_request_error","from_route_error","from_server_error","from_socket_error","init","into","into_tide_error","message","provide","render_to","serialize","source","status","status","status","to_owned","to_string","try_from","try_into","type_id","vzip","Request","body_binary","body_json","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from","header","init","into","send","try_from","try_into","type_id","vzip","Connection","SocketRequest","Unsupported","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","header","init","init","init","into","into","into","into_stream","poll_close","poll_flush","poll_next","poll_ready","serialize","start_send","subscribe","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["surf_discosurf_disco::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","surf_disco::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","surf_disco::request","","","","","","","","","","","","","","","","","","","surf_disco::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["202 Accepted","The ACL method modifies the access control list (which can …","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","","409 Conflict","The CONNECT method requests that the recipient establish a …","100 Continue","The COPY method creates a duplicate of the source resource …","201 Created","The DELETE method requests that the origin server remove …","103 Early Hints","Errors which can be serialized in a response body.","417 Expectation Failed","424 Failed Dependency","403 Forbidden","302 Found","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The HEAD method is identical to GET except that the server …","505 HTTP Version Not Supported","418 I’m a teapot","226 Im Used","507 Insufficient Storage","500 Internal Server Error","A LABEL request can be applied to a version to modify the …","411 Length Required","The LINK method establishes one or more Link relationships …","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","The MERGE method performs the logical merge of a specified …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","206 Partial Content","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The POST method requests that the target resource process …","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This method …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","407 Proxy Authentication Required","The PUT method requests that the state of the target …","The REBIND method removes a binding to a resource from a …","A REPORT request is an extensible mechanism for obtaining …","","431 Request Header Fields Too Large","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","The client invokes the SEARCH method to initiate a …","303 See Other","503 Service Unavailable","","HTTP response status codes.","101 Switching Protocols","307 Temporary Redirect","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","415 Unsupported Media Type","The UPDATE method modifies the content and dead properties …","The UPDATEREDIRECTREF method requests the update of a …","426 Upgrade Required","414 URI Too Long","A parsed URL record.","506 Variant Also Negotiates","A VERSION-CONTROL request can be used to create a …","","","Return the serialization of this URL.","","","","","","","Return whether this URL is a cannot-be-a-base URL, meaning …","The canonical reason for a given status code","","","","","","","","","","Connect to a server, retrying if the server is not running.","","","","","","","","","","Serialize with Serde using the internal representation of …","If this URL has a host and it is a domain name (not an IP …","","","","","","","","","","","","","","","Return this URL’s fragment identifier, if any.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert a directory name as <code>std::path::Path</code> into an URL in …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","","","","","","","Build an HTTP <code>GET</code> request.","","","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","","","Return the parsed representation of the host for this URL. …","Return the string representation of the host (domain or IP …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Return the serialization of this URL.","","Returns <code>true</code> if the status code is the <code>4xx</code> range.","Returns <code>true</code> if the status code is <code>1xx</code> range.","Returns <code>true</code> if the status code is the <code>3xx</code> range.","Whether a method is considered “safe”, meaning the …","Returns <code>true</code> if the status code is the <code>5xx</code> range.","Returns <code>true</code> if the status code is the <code>2xx</code> range.","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","Return a default <code>ParseOptions</code> that can fully configure the …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator of …","Return an object with methods to manipulate this URL’s …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Build an HTTP <code>POST</code> request.","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a sequence …","","","","","Return the scheme of this URL, lower-cased, as an ASCII …","","","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","","Resolve a URL’s host and port number to <code>SocketAddr</code>.","","Assuming the URL is in the <code>file</code> scheme or similar, convert …","","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","","","","","A client of a Tide Disco application.","Interface to specify optional configuration values before …","A response to a healthcheck endpoint.","Common health statuses of an application.","","","","","","","","","","","","Create a Client with the settings specified in this …","Create a client with customization.","","","","","Connect to the server, retrying if the server is not …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Build an HTTP <code>GET</code> request.","Query the server’s healthcheck endpoint.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a client for a sub-module of the connected …","Create a client and connect to the Tide Disco server at …","Build an HTTP <code>POST</code> request.","Build an HTTP request with the specified method.","","Set connection timeout duration.","Build a streaming connection request.","The status of this health check.","","","","","","","","","","","","","","","","Connect to the server, retrying until the server is <code>healthy</code>…","The simplest possible implementation of Error.","Errors which can be serialized in a response body.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Set the request body using bincode.","Set the request body using JSON.","","","","","","","","Returns the argument unchanged.","Set a header on the request.","","Calls <code>U::from(self)</code>.","Send the request and await a response from the server.","","","","","A bi-directional connection to a WebSocket server.","","Unconstructable enum used to disable the Sink …","","","","","","","","","Start the WebSocket handshake and initiate a connection to …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Set a header on the request.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Initiate a unidirectional connection to the server.","","","","","","","","","","","","","",""],"i":[5,3,5,5,3,3,3,3,0,5,3,5,3,5,3,5,0,5,5,5,5,5,3,5,3,5,5,5,5,5,3,5,3,3,5,5,3,0,5,5,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,3,3,5,3,5,5,5,3,5,5,3,3,3,5,3,3,3,0,5,5,5,5,3,5,5,0,0,5,5,5,5,3,5,5,3,3,3,3,5,5,3,3,5,5,0,5,3,1,3,1,1,3,5,1,3,5,1,5,23,0,1,3,5,1,3,5,1,0,1,3,5,1,3,5,1,3,5,1,1,1,3,5,1,3,5,5,0,1,1,3,3,5,5,1,1,3,5,23,1,1,23,23,23,23,23,1,3,0,1,3,5,1,1,1,3,5,1,1,0,1,1,1,1,1,3,5,1,3,5,1,1,1,1,1,1,23,5,5,5,3,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,3,5,0,1,1,3,5,1,1,1,1,1,1,1,1,1,1,0,1,23,1,1,1,3,5,1,3,5,1,1,3,3,5,5,1,3,5,1,3,5,1,1,3,5,53,0,0,0,0,53,53,53,53,53,51,52,53,51,52,53,51,52,52,53,52,53,52,52,53,51,52,53,51,52,53,53,51,52,53,53,52,53,51,52,52,53,52,52,51,52,53,51,52,53,52,52,52,52,53,51,52,55,53,52,53,51,52,53,51,52,53,51,52,53,51,52,53,52,0,0,58,58,58,58,23,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,23,23,23,23,23,23,58,58,23,58,58,58,58,58,23,58,58,58,58,58,58,58,58,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,69,56,66,69,56,66,66,66,56,69,56,66,69,56,66,66,69,69,56,66,56,66,69,69,56,56,56,66,56,69,56,66,69,56,66,69,69,69,69,69,66,69,56,66,69,56,66,69,56,66,69,69,56,66,69,56,66],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[1,4],[5,2],[[5,6]],0,[1,1],[3,3],[5,5],[[]],[[]],[[]],[[1,1],7],[[1,[9,[8]]],4],[10],[10],[10],[10],[10],[10],[[],[[11,[1]]]],[[],[[11,[3]]]],[[],[[11,[5]]]],[[],[[11,[1]]]],[1,[[9,[2]]]],[10],[10],[10],[[1,1],4],[[3,3],4],[[5,5],4],[[5,12],4],0,[[1,13],[[11,[14]]]],[[1,13],[[11,[14]]]],[[3,13],[[11,[14]]]],[[3,13],[[11,[14]]]],[[5,13],[[11,[14]]]],[[5,13],[[11,[14]]]],[1,[[9,[2]]]],[[]],[[]],[[]],[15],[[],[[11,[1]]]],[[],[[11,[1]]]],[16],[17],[18],[19],[20],[2,[[11,[1,21]]]],[2,[[11,[3]]]],[1,[[24,[22,23]]]],[[],25],[[],25],[[],25],[1,4],[1,4],[1],[3],[5],[1,[[9,[[26,[2]]]]]],[1,[[9,[2]]]],0,[[1,[28,[27]]],2],[[1,[29,[27]]],2],[[1,30],2],[[1,[31,[27]]],2],[[],10],[[],10],[[],10],[[]],[[]],[[]],[1,[[11,[32,33]]]],[1,[[11,[32,34]]]],[1,[[11,[32,33]]]],[1,[[11,[32,34]]]],[[],[[35,[6]]]],[1,6],[[],19],[5,4],[5,4],[5,4],[3,4],[5,4],[5,4],[[1,2],[[11,[1,21]]]],[[1,1],[[9,[6]]]],[[],36],[1,37],[2,[[11,[1,21]]]],[2,[[11,[1,21]]]],[[1,1],[[9,[7]]]],[1,[[9,[2]]]],[1,2],[1,[[9,[[39,[38]]]]]],[1,[[11,[40]]]],[1,[[9,[12]]]],[1,[[9,[12]]]],[1,[[24,[22,23]]]],[1,[[9,[2]]]],[1,41],[1,[[43,[42]]]],[6],[6],[6],0,[1,2],[1,11],[3,11],[5,11],[1,11],[[1,[9,[2]]]],[[1,[9,[2]]],[[11,[21]]]],[[1,44],11],[[1,[9,[2]]],11],[[1,2]],[[1,[9,[12]]],11],[[1,[9,[2]]]],[[1,2],11],[[1,2],11],0,[[1,45],[[11,[[48,[46,47]],16]]]],[[],5],[1,[[11,[49]]]],[1,[[11,[16]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[2,[[11,[1]]]],[[],11],[[],11],[2,[[11,[3]]]],[[],11],[12,[[11,[5]]]],[[],11],[[],11],[[],11],[[],50],[[],50],[[],50],[1,2],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[23]]],[[52,[23]]]],[1,[[51,[23]]]],[52,52],[53,53],[[]],[[]],[[[52,[23]],[9,[8]]],4],[[],[[52,[23]]]],[[],53],[10],[10],[10],[10],[10],[10],[[],[[11,[53]]]],[10],[10],[10],[[53,53],4],[[52,13],54],[[53,13],[[11,[14]]]],[[]],[[]],[[[51,[23]]],[[52,[23]]]],[[]],[[[52,[23]],2],[[24,[22,23]]]],[[[52,[23]]],[[11,[[0,[22,55]],23]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[[52,[23]],2],[[11,[[52,[23]],21]]]],[1,[[52,[23]]]],[[[52,[23]],2],[[24,[22,23]]]],[[[52,[23]],3,2],[[24,[22,23]]]],[53,11],[[[51,[23]],[9,[8]]],[[51,[23]]]],[[[52,[23]],2],[[56,[23]]]],[[],5],[53,5],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],50],[[],50],[[],50],[[]],[[]],[[]],[[[52,[23]],45,[9,[8]]],[[9,[[0,[22,55]]]]]],0,0,[[],57],[58,[[9,[59]]]],[[]],[[]],[[5,6]],[[5,6],58],[58,[[9,[57]]]],[58,58],[[]],[10],[10],[58,2],[[],[[11,[58]]]],[10],[[58,58],4],[[58,13],[[11,[14]]]],[[58,13],[[11,[14]]]],[18,58],[20,58],[16,58],[15,58],[17,58],[[]],[15],[16],[17],[18],[19],[20],[[],10],[[]],[[],19],0,[60],[6],[58,11],[58,[[9,[57]]]],[[],5],[58,5],0,[[]],[[],6],[[],11],[[],11],[[],50],[[]],0,[[[24,[22,23]]],[[11,[[24,[22,23]],23]]]],[[[24,[22,23]]],[[11,[[24,[22,23]],23]]]],[[]],[[]],[10],[10],[10],[[[24,[61,61]],13],54],[62,24],[[]],[[[24,[22,23]],[64,[63]],65],[[24,[22,23]]]],[[],10],[[]],[[[24,[22,23]]],[[11,[22,23]]]],[[],11],[[],11],[[],50],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[[]],[[[56,[23]]],[[11,[[69,[22,[0,[67,68]],23]],23]]]],[10],[10],[10],[10],[10],[10],[[],[[11,[66]]]],[[[69,[68]]]],[10],[10],[10],[[[56,[61]],13],54],[[66,13],54],[[]],[[[71,[70]]],[[69,[68]]]],[72,56],[1,56],[[]],[[]],[[[56,[23]],[64,[63]],65],[[56,[23]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[[73,[[69,[[0,[67,68]],23]]]],74],[[75,[11]]]],[[[73,[[69,[[0,[67,68]],23]]]],74],[[75,[11]]]],[[[73,[[69,[22,68,23]]]],74],[[75,[9]]]],[[[73,[[69,[[0,[67,68]],23]]]],74],[[75,[11]]]],[66,11],[[[73,[[69,[[0,[67,68]],23]]]]],11],[[[56,[23]]],[[11,[[69,[22,66,23]],23]]]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[73,74],[[75,[[9,[11]]]]]],[[],50],[[],50],[[],50],[[]],[[]],[[]]],"p":[[3,"Url"],[15,"str"],[4,"Method"],[15,"bool"],[4,"StatusCode"],[3,"String"],[4,"Ordering"],[3,"Duration"],[4,"Option"],[15,"usize"],[4,"Result"],[15,"u16"],[3,"Formatter"],[3,"Error"],[4,"ConfigError"],[3,"Error"],[4,"RequestError"],[4,"RouteError"],[3,"Error"],[4,"SocketError"],[4,"ParseError"],[8,"DeserializeOwned"],[8,"Error"],[3,"Request"],[15,"u64"],[4,"Host"],[4,"Position"],[3,"RangeFrom"],[3,"Range"],[3,"RangeFull"],[3,"RangeTo"],[3,"Request"],[4,"Error"],[4,"Error"],[4,"Resettable"],[3,"ParseOptions"],[4,"Origin"],[15,"char"],[3,"Split"],[3,"PathSegmentsMut"],[3,"Parse"],[3,"UrlQuery"],[3,"Serializer"],[4,"IpAddr"],[8,"Fn"],[4,"SocketAddr"],[3,"Global"],[3,"Vec"],[3,"PathBuf"],[3,"TypeId"],[3,"ClientBuilder"],[3,"Client"],[4,"HealthStatus"],[6,"Result"],[8,"HealthCheck"],[3,"SocketRequest"],[8,"Error"],[3,"ClientError"],[3,"Backtrace"],[3,"Demand"],[8,"Debug"],[3,"RequestBuilder"],[3,"HeaderName"],[8,"Into"],[8,"ToHeaderValues"],[4,"Unsupported"],[8,"Serialize"],[8,"Sized"],[3,"Connection"],[6,"ConnectStream"],[3,"WebSocketStream"],[3,"Builder"],[3,"Pin"],[3,"Context"],[4,"Poll"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
