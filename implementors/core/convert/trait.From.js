(function() {var implementors = {};
implementors["surf_disco"] = [{"text":"impl&lt;T, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RequestBuilder&gt; for <a class=\"struct\" href=\"surf_disco/request/struct.Request.html\" title=\"struct surf_disco::request::Request\">Request</a>&lt;T, E&gt;","synthetic":false,"types":["surf_disco::request::Request"]},{"text":"impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"surf_disco/struct.Url.html\" title=\"struct surf_disco::Url\">Url</a>&gt; for <a class=\"struct\" href=\"surf_disco/socket/struct.SocketRequest.html\" title=\"struct surf_disco::socket::SocketRequest\">SocketRequest</a>&lt;E&gt;","synthetic":false,"types":["surf_disco::socket::SocketRequest"]},{"text":"impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.8/http/request/struct.Builder.html\" title=\"struct http::request::Builder\">Builder</a>&gt; for <a class=\"struct\" href=\"surf_disco/socket/struct.SocketRequest.html\" title=\"struct surf_disco::socket::SocketRequest\">SocketRequest</a>&lt;E&gt;","synthetic":false,"types":["surf_disco::socket::SocketRequest"]},{"text":"impl&lt;FromServer, ToServer:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WebSocketStream&lt;TcpStream&gt;&gt; for <a class=\"struct\" href=\"surf_disco/socket/struct.Connection.html\" title=\"struct surf_disco::socket::Connection\">Connection</a>&lt;FromServer, ToServer, E&gt;","synthetic":false,"types":["surf_disco::socket::Connection"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()